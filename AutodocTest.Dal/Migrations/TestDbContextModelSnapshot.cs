// <auto-generated />
using AutodocTest.Dal.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutodocTest.Dal.Migrations
{
    [DbContext(typeof(TestDbContext))]
    partial class TestDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AutodocTest.Dal.Model.FileBody", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte[]>("Body")
                        .IsRequired()
                        .HasColumnType("varbinary(MAX)");

                    b.HasKey("Id");

                    b.ToTable("file_data");
                });

            modelBuilder.Entity("AutodocTest.Dal.Model.FileData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TaskInfoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaskInfoId");

                    b.ToTable("file_data", t =>
                        {
                            t.HasComment("Файл");
                        });
                });

            modelBuilder.Entity("AutodocTest.Dal.Model.TaskInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("task_info", t =>
                        {
                            t.HasComment("Задача");
                        });
                });

            modelBuilder.Entity("AutodocTest.Dal.Model.FileBody", b =>
                {
                    b.HasOne("AutodocTest.Dal.Model.FileData", "File")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");
                });

            modelBuilder.Entity("AutodocTest.Dal.Model.FileData", b =>
                {
                    b.HasOne("AutodocTest.Dal.Model.TaskInfo", "TaskInfo")
                        .WithMany("Files")
                        .HasForeignKey("TaskInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskInfo");
                });

            modelBuilder.Entity("AutodocTest.Dal.Model.TaskInfo", b =>
                {
                    b.Navigation("Files");
                });
#pragma warning restore 612, 618
        }
    }
}
